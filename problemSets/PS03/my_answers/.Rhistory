# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("nnet", "MASS", "ggplot2"),  pkgTest)
# load data
mexico_elections <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/MexicoMuniData.csv")
# Inspect data
head(mexico_elections, 5) # Call first 5 observations
tail(mexico_elections, 5) # Call final 5 observations
colnames(mexico_elections) # Call column names
lapply(mexico_elections, typeof) # Call datatypes for each column
lapply(mexico_elections, class) # Call datatypes for each column
lapply(mexico_elections, typeof) # Call datatypes for each column
summary(mexico_elections) # Call summary statistics for each column
View(mexico_elections)
View(mexico_elections)
lapply(mexico_elections, typeof) # Call datatypes for each column
# Inspect data
str(mexico_elections)
lapply(mexico_elections, typeof) # Call datatypes for each column - note all numeric
mexico_elections$competitive.district
class(mexico_elections$competitive.district)
is.factor(mexico_elections$competitive.district)
is.factor(mexico_elections$PAN.governor.06)
within(mexico_elections, {
competitive.district <- as.factor(competitive.district)
mexico_elections$PAN.governor.06 <- as.factor(mexico_elections$PAN.governor.06)
})
# Note binary variables must be coerced into factors for analysis
is.factor(mexico_elections$competitive.district)
is.factor(mexico_elections$PAN.governor.06)
# Note binary variables must be coerced into factors for analysis
is.logical(mexico_elections$competitive.district)
is.logical(mexico_elections$PAN.governor.06)
# Note binary variables must be coerced into logicals for analysis
is.logical(mexico_elections$competitive.district)
is.logical(mexico_elections$PAN.governor.06)
within(mexico_elections, {
competitive.district <- as.logical(competitive.district)
mexico_elections$PAN.governor.06 <- as.logical(mexico_elections$PAN.governor.06)
})
# Note binary variables must be coerced into logicals for analysis
is.logical(mexico_elections$competitive.district)
is.logical(mexico_elections$PAN.governor.06)
# Note binary variables must be coerced into logicals for analysis
is.logical(mexico_elections$competitive.district)
is.logical(mexico_elections$PAN.governor.06)
within(mexico_elections, {
competitive.district <- as.logical(competitive.district)
mexico_elections$PAN.governor.06 <- as.logical(mexico_elections$PAN.governor.06)
})
# Note binary variables must be coerced into logicals for analysis
is.logical(mexico_elections$competitive.district)
is.logical(mexico_elections$PAN.governor.06)
?with
# Check assumptions of the response variable for Poisson - are the mean and variance equal?
with(mexico_elections,
list(mean(PAN.visits.06), var(PAN.visits.06))) # do we meet assumptions for Poisson?
# Visualise with a histogram
hist(mexico_elections$PAN.visits.06)
ggplot(mexico_elections, aes(competitive.district), PAN.visits.06, color = PAN.governor.06) +
geom_jitter(alpha = 0.5)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06) +
)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06) +
+
)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06)) +
geom_jitter(alpha = 0.5)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06))
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06)) +
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06)) +
geom_jitter(alpha = 0.5)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06)) +
geom_jitter(alpha = 0.5)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06)) +
geom_jitter(alpha = 0.5)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
plot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06)) +
geom_jitter(alpha = 0.5)
plot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06))
plot(mexico_elections, aes(competitive.district, PAN.visits.06))
View(mexico_elections) # Call the data in a dedicated window view
autoplot(mexico_elections, aes(competitive.district, PAN.visits.06))
barplot(mexico_elections, aes(competitive.district, PAN.visits.06))
scatterplot(mexico_elections, aes(competitive.district, PAN.visits.06))
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
lapply(c("nnet", "MASS", "ggplot2"),  pkgTest)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
plot(mexico_elections, aes(competitive.district, PAN.visits.06, color = PAN.governor.06)) +
geom_jitter(alpha = 0.5)
scatterplot(mexico_elections, aes(competitive.district, PAN.visits.06))
scatter(mexico_elections, aes(competitive.district, PAN.visits.06))
scatterpoint(mexico_elections, aes(competitive.district, PAN.visits.06))
point(mexico_elections, aes(competitive.district, PAN.visits.06))
plot(mexico_elections, aes(competitive.district, PAN.visits.06))
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06))
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
scatter()
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
point()
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
points()
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
points(competitive.district, PAN.visits.06)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
points(competitive.district)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
barplot()
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
plot()
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
plot(competitive.district, PAN.visits.06)
plot(competitive.district, PAN.visits.06)
plot(competitive.district, PAN.visits.06, data = mexico_elections)
ggplot(mexico_elections, aes(competitive.district, PAN.visits.06)) +
plot(mexico_elections$competitive.district, mexico_elections$PAN.visits.06)
plot(mexico_elections$competitive.district, mexico_elections$PAN.visits.06)
plot(mexico_elections$competitive.district, mexico_elections$PAN.visits.06) +
geom_jitter()
plot(mexico_elections$competitive.district, mexico_elections$PAN.visits.06) +
geom_jitter(alpha = 0.5)
# Visualise with a histogram - shows very strong right-skew...
hist(mexico_elections$PAN.visits.06)
# Run Poisson regression
mod.ps1 <- glm(PAN.visits.06 ~ competitive.districts, data = mexico_election, family = poisson)
# Run Poisson regression
mod.ps1 <- glm(PAN.visits.06 ~ competitive.districts, data = mexico_elections, family = poisson)
# Run Poisson regression
mod.ps1 <- glm(PAN.visits.06 ~ competitive.district, data = mexico_elections, family = poisson)
summary(mod.ps1)
# ... with competitive.district, marginality.06 and PAN.governer.06 as predictors
mod.ps2 <- glm(PAN.visits.06 ~ competitive.district + marginality.06 + PAN.governer.06,
data = mexico_elections,
family = poisson)
# ... with competitive.district, marginality.06 and PAN.governor.06 as predictors
mod.ps2 <- glm(PAN.visits.06 ~ competitive.district + marginality.06 + PAN.governor.06,
data = mexico_elections,
family = poisson)
summary(mod.ps2)
lapply(c("nnet", "MASS", "ggplot2", "stargazer"),  pkgTest)
stargazer(summary(mod.ps2), type = "latex")
stargazer(mod.ps2, type = "latex")
# Export for Latex
stargazer(mod.ps1, type = "latex")
stargazer(mod.ps2, type = "latex")
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06, fill = competitive.district)) +
geom_histogram(binwidth = 0.5)
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06, fill = competitive.district)) +
geom_histogram(binwidth = 0.5, position = "dodge")
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06)) +
geom_histogram(binwidth = 0.5, position = "dodge")
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06)) +
geom_histogram(binwidth = 0.5)
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06)) +
geom_histogram(binwidth = 1)
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06)) +
geom_histogram()
# Exponentiating log-count coefficients
mod.ps2$coefficients
# Exponentiating log-count coefficients
exp(mod.ps2$coefficients)
exp(1)
exp(-1)
exp(-2)
exp(-0.5)
exp(0.5)
exp(0.0001)
exp(0.000)
# Exponentiating log-count coefficients
exp(mod.ps2$coefficients)
# Exponentiating log-count coefficients
exp(mod.ps1$coefficients)
mod.ps1$coefficients
# Exponentiating log-count coefficients
exp(mod.ps1$coefficients)
exp(mod.ps2$coefficients)
mod.ps2$coefficients
mod.ps2$coefficients
summary(mod.ps2)
exp(mod.ps2$coefficients)
View(mexico_elections) # Call the data in a dedicated window view
colnames(mexico_elections) # Call column names
# Create hypothetical district
pred <- data.frame(MunicipCode = 0,
pan.vote.09 = 0,
marginality.06 = 0,
PAN.governor.06 = 1,
PAN.visits.06 = NULL,
competitive.district = 1)
pred <- data.frame(MunicipCode = 0,
pan.vote.09 = 0,
marginality.06 = 0,
PAN.governor.06 = 1,
PAN.visits.06 = NULL,
competitive.district = 1)
# Create hypothetical district
pred <- data.frame(MunicipCode = 0,
pan.vote.09 = 0,
marginality.06 = 0,
PAN.governor.06 = 1,
PAN.visits.06 = ,
competitive.district = 1)
# Create hypothetical district
pred <- data.frame(MunicipCode = 0,
pan.vote.09 = 0,
marginality.06 = 0,
PAN.governor.06 = 1,
PAN.visits.06 = "",
competitive.district = 1)
# Create hypothetical district
pred <- data.frame(MunicipCode = 0,
pan.vote.09 = 0,
marginality.06 = 0,
PAN.governor.06 = 1,
competitive.district = 1)
pred_hyp <- predict(mod.ps2, newdata = pred, type = "response")
pred_hyp
pred_hyp <- cbind(pred_hyp, "Exp" = exp(pred_hyp))
pred_hyp
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("nnet", "MASS", "ggplot2", "stargazer"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data
gdp_data <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/gdpChange.csv",
stringsAsFactors = F)
# load data
gdp_data <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/gdpChange.csv",
stringsAsFactors = F)
# Inspect data
str(gdp_data) # Call structure of the data
summary(gdp_data) # Call summary statistics for each column
head(gdp_data, 5) # Call first 5 observations
tail(gdp_data, 5) # Call final 5 observations
colnames(gdp_data) # Call column names
lapply(gdp_data, typeof) # Call datatypes for each column
View(gdp_data) # View whole dataset
print(unique(gdp_data$CTYNAME)) # Call names of countries in dataset
length(unique(gdp_data$CTYNAME)) # Call total number of countries
# Check response variable. Note is numeric.
print(gdp_data$GDPWdiff)
# Transform variable into factor with levels "negative", "no change", and "positive"
gdp_data$GDPWdiff <- as.factor(ifelse(gdp_data$GDPWdiff < 0, "negative",
ifelse(gdp_data$GDPWdiff == 0, "no change",
"positive")))
# Confirm now a factor
is.factor(gdp_data$GDPWdiff)
# Check levels are updated
levels(gdp_data$GDPWdiff)
# Relevel so "no change" is reference category
gdp_data$GDPWdiff <- relevel(gdp_data$GDPWdiff, ref = "no change")
# Confirm releveling is successful
levels(gdp_data$GDPWdiff)
# Check explanatory variables. Note each are 'sparse' with over 50% 'empty'
print(gdp_data$REG)
cat("Note that the data is", round((1 - sum(gdp_data$REG)/length(gdp_data$REG))*100, 2),
"% 'empty' or zeros, meaning it is considered sparse")
print(gdp_data$OIL)
cat("Note that the data is", round((1 - sum(gdp_data$OIL)/length(gdp_data$OIL))*100, 2),
"% 'empty' or zeros, meaning it is considered sparse")
ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data))
ggplot(gdp_data, aes(REG, OIL)) +
geom_boxplot() +
geom_jitter(alpha = 0.3) +
#scale_x_discrete(labels=function(x){sub("\\s", "\n", x)}) +
theme(axis.text.x = element_text(angle = 45)) +
facet_grid(gender ~ year)
ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data))
plot(ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data)))
autoplot(ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data)))
plot(ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data)))
ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data))
ggplot(contingency_data, aes(x = GDPWdiff, y = count, fill = factor(OIL))) +
geom_bar(stat = "identity") +
labs(x = "GDPWdiff", y = "Count", fill = "OIL") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("0" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = GDPWdiff, y = count, fill = factor(OIL))) +
geom_bar(stat = "identity") +
labs(x = "GDPWdiff", y = "Count", fill = "OIL") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("0" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = GDPWdiff, y = count, fill = factor(OIL))) +
geom_bar(stat = "identity") +
labs(x = "GDPWdiff", y = "Count", fill = "OIL") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("0" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = GDPWdiff, y = REG, fill = factor(OIL))) +
geom_bar(stat = "identity") +
labs(x = "GDPWdiff", y = "REG", fill = "OIL") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("0" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = GDPWdiff, y = OIL, fill = factor(REG))) +
geom_bar(stat = "identity") +
labs(x = "GDPWdiff", y = "REG", fill = "OIL") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("0" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = REG, y = OIL, fill = factor(GDPWdiff))) +
geom_bar(stat = "identity") +
labs(x = "GDPWdiff", y = "REG", fill = "OIL") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("0" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = REG, y = OIL, fill = factor(GDPWdiff))) +
geom_bar(stat = "identity") +
labs(x = "REG", y = "OIL", fill = "GDPWdiff") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("0" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = REG, y = OIL, fill = factor(GDPWdiff))) +
geom_bar(stat = "identity") +
labs(x = "REG", y = "OIL", fill = "GDPWdiff") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("no change" = "blue", "1" = "red"))
ggplot(gdp_data, aes(x = REG, y = OIL, fill = factor(GDPWdiff))) +
geom_bar(stat = "identity") +
labs(x = "REG", y = "OIL", fill = "GDPWdiff") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("no change" = "blue", "positive" = "red"))
ggplot(gdp_data, aes(x = REG, y = OIL, fill = factor(GDPWdiff))) +
geom_bar(stat = "identity") +
labs(x = "REG", y = "OIL", fill = "GDPWdiff") +
ggtitle("Contingency Table Visualization") +
theme_minimal() +
theme(legend.position = "top") +
scale_fill_manual(values = c("no change" = "blue", "positive" = "red", "negative" = "green"))
ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data))
contingency_table <- ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data))
stargazer(contingency_table, type = "latex")
contingency_table <- transpose(ftable(xtabs(~ GDPWdiff + REG + OIL, data = gdp_data)))
# load data
mexico_elections <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsII_Spring2024/main/datasets/MexicoMuniData.csv")
# Inspect data
str(mexico_elections) # Call the structure of the data
summary(mexico_elections) # Call summary statistics for each column
head(mexico_elections, 5) # Call first 5 observations
tail(mexico_elections, 5) # Call final 5 observations
colnames(mexico_elections) # Call column names
lapply(mexico_elections, typeof) # Call datatypes for each column - note all numeric
summary(mexico_elections) # Call summary statistics for each column
View(mexico_elections) # Call the data in a dedicated window view
# Note binary variables must be coerced into logicals for analysis
is.logical(mexico_elections$competitive.district)
is.logical(mexico_elections$PAN.governor.06)
# Coerce within the dataframe's environment
mexico_elections <- within(mexico_elections, {
competitive.district <- as.logical(competitive.district)
mexico_elections$PAN.governor.06 <- as.logical(mexico_elections$PAN.governor.06)
})
# Note binary variables now return TRUE as logicals
is.logical(mexico_elections$competitive.district)
is.logical(mexico_elections$PAN.governor.06)
# Check assumptions of the response variable for Poisson -
# are the mean and variance approximately equal? No...
with(mexico_elections,
list(mean(PAN.visits.06), var(PAN.visits.06)))
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06)) +
geom_histogram()
# Run Poisson regression...
# ... with only competitive.district as predictor
mod.ps1 <- glm(PAN.visits.06 ~ competitive.district,
data = mexico_elections,
family = poisson)
summary(mod.ps1)
# ... with competitive.district, marginality.06 and PAN.governor.06 as predictors
mod.ps2 <- glm(PAN.visits.06 ~ competitive.district + marginality.06 + PAN.governor.06,
data = mexico_elections,
family = poisson)
summary(mod.ps2)
# Export for Latex
stargazer(mod.ps1, type = "latex")
stargazer(mod.ps2, type = "latex")
# Exponentiating log-count coefficients
exp(mod.ps1$coefficients)
exp(mod.ps2$coefficients)
# Create hypothetical district
pred <- data.frame(MunicipCode = 0,
pan.vote.09 = 0,
marginality.06 = 0,
PAN.governor.06 = 1,
competitive.district = 1)
pred_hyp <- predict(mod.ps2, newdata = pred, type = "response")
pred_hyp <- cbind(pred_hyp, "Exp" = exp(pred_hyp))
# plot predictions vs count
ggplot(data = NULL, aes(x = mod.ps2$fitted.values, y = long_data$art)) +
geom_jitter(alpha = 0.5) +
geom_abline(color = "blue") #+
# Export for Latex
pos_tab1 <- stargazer(mod.ps1, type = "latex")
pos_tab2 <- stargazer(mod.ps2, type = "latex")
# Exponentiating log-count coefficients
exp(mod.ps1$coefficients)
exp(mod.ps2$coefficients)
# Create hypothetical district
pred <- data.frame(MunicipCode = 0,
pan.vote.09 = 0,
marginality.06 = 0,
PAN.governor.06 = 1,
competitive.district = 1)
pred_hyp <- predict(mod.ps2, newdata = pred, type = "response")
pred_hyp <- cbind(pred_hyp, "Exp" = exp(pred_hyp))
# Print odds ratios
exp(coef(model1))
# Fit unordered multinomial logistic regression model
model1 <- multinom(GDPWdiff ~ REG + OIL, data = gdp_data)
# Print regression table
summary(model1)
# Print odds ratios
exp(coef(model1))
# Visualise with a histogram - shows very strong right-skew...
ggplot(data = mexico_elections, aes(PAN.visits.06)) +
geom_histogram()
summary(model1)
exp(coef(model1))
summary(model1)
# Print regression table
summary(model2)
# Fit ordered multinomial logistic regression model
model2 <- polr(GDPWdiff ~ REG + OIL, data = gdp_data, Hess = TRUE)
# Print regression table
summary(model2)
# Print odds ratios
model2_ORs <- exp(coef(model2))
