scale_y_continuous(limits = c(0,1))
CSpredict2 <- predict(CSmodel, climateSupport, type = "response")
View(CSpredict)
CSpredict2
str(CSpredict2)
CScheck <- data.frame(choice_pred = CSpredict2,
CSmodel$fitted.values)
plot(CScheck$choice_pred, CScheck$CSmodel.fitted.values)
plot(climateSupport$choice,
CSmodel$fitted.values)
plot_geo(climateSupport$choice,
CSmodel$fitted.values)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("dplyr", "ggplot2", "plotly"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load data
load(url("https://github.com/ASDS-TCD/StatsII_Spring2024/blob/main/datasets/climateSupport.RData?raw=true"))
# Inspect dataset
head(climateSupport)
# Inspect dataset
head(climateSupport, 5)
# Inspect dataset
head(climateSupport, 5)
# Inspect dataset
head(climateSupport)
str(climateSupport)
str(climateSupport) #
lapply(climateSupport, class)
lapply(climateSupport, unique)
names(climateSupport) #
summary(climateSupport)
anyNA.data.frame(climateSupport)
climateSupport %>%
xtabs(~ countries + sanctions, data = .) %>%
ggplot(aes(countries, sanctions)) +
geom_point()
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
geom_bar()
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions))
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
barplot(choice, sanctions)
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
barplot("choice", "sanctions")
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
barplot(aes(choice, sanctions))
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
barplot(aes("choice", "sanctions"))
?barplot
?ggplot
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
geom_bar()
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
geom_bar(aes(choice, sanctions))
?geombar
?geom_bar
plot(x = climateSupport$choice,
y = jitter(as.double(climateSupport$countries)),
xlab = "Support",
ylab = "Number of Countries")
?geom_bar
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, sanctions)) +
geom_col(aes(choice, sanctions))
# Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, countries)) +
geom_col(aes(choice, countries))
climateSupport %>%
xtabs(~ countries + sanctions, data = .) %>%
ggplot(aes(countries, sanctions)) +
geom_point()
# Fit an additive model with response ("choice") and predictors ("countries", "sanctions")
CSmodel <- glm(choice ~ countries + sanctions,
data = climateSupport,
family = binomial(link = "logit"))
# Inspect new logistical model details
summary(CSmodel)
plot(x = climateSupport$choice,
y = jitter(as.double(climateSupport$countries)),
xlab = "Support",
ylab = "Number of Countries")
View(climateSupport)
climateSupport %>%
ggplot(aes(countries, sanctions)) +
geom_point()
climateSupport %>%
ggplot(aes(jitter(countries), sanctions)) +
geom_point()
climateSupport %>%
ggplot(aes(countries, jitter(sanctions))) +
geom_point()
climateSupport %>%
ggplot(aes(countries, sanctions)) +
geom_point()
ggplot(my_data, aes(x = countries, fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Bar Plot for Countries and Choices", y = "Count") +
theme_minimal()
ggplot(climateSupport, aes(x = countries, fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Bar Plot for Countries and Choices", y = "Count") +
theme_minimal()
ggplot(climateSupport, aes(countries, fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Bar Plot Showing Individual Support across Number of Supporting Countries",
y = "Count of Choice Support")
ggplot(climateSupport, aes(countries, fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Bar Plot Showing Individual Support across Number of Supporting Countries",
y = "Count of Choice Support") +
theme_dark()
ggplot(climateSupport, aes(countries, fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Bar Plot Showing Individual Support across Number of Supporting Countries",
y = "Count of Choice Support") +
theme_minimal()
?labs
ggplot(climateSupport, aes(countries,
"test" = fill = factor(choice))) +
ggplot(climateSupport, aes(countries,
fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot Showing Individual Support across the Number of Supporting Countries",
y = "Count of Choice Support", caption = "dasd" ) +
theme_minimal()
ggplot(climateSupport, aes(countries,
fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot Showing Individual Support across the Number of Supporting Countries",
y = "Count of Choice Support", caption = "dasd" ) +
legend(title = "sdfsd")
?legend
ggplot(climateSupport, aes(countries,
fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot Showing Individual Support across the Number of Supporting Countries",
y = "Count of Choice Support", caption = "dasd" ) +
theme_minimal()
ggplot(climateSupport, aes(sanctions,
fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot Showing Support Choice across Sanction Severity",
y = "Count of Choice Support") +
theme_minimal()
climateSupport %>%
ggplot(aes(countries, sanctions)) +
geom_bar(position)
climateSupport %>%
ggplot(aes(countries, sanctions)) +
geom_bar()
ggplot(climateSupport, aes(sanctions))) +
ggplot(climateSupport, aes(sanctions)) +
geom_point(y = mean(choice)) +
labs(title = "Stacked Bar Plot Showing Support Choice across Sanction Severity",
y = "Count of Choice Support") +
theme_minimal()
View(CSmodel)
# Inspect new logistical model details
summary(CSmodel)
attributes(CSmodel)
#Extract global null hypothesis
CSmodel$df.null
#Extract global null hypothesis
CSmodel$formula
#Extract global null hypothesis
CSmodel$deviance
#Extract global null hypothesis
CSmodel$null.deviance
#Extract global null hypothesis
CSmodel$null.deviance - CSmodel$deviance
global_null <- anove(CSmodel, test = "Chisq")
global_null <- anova(CSmodel, test = "Chisq")
global_null
anova(CSmodel_null, CSmodel, test = "LRT")
CSmodel_null <- glm(choice ~ 1,
data = climateSupport,
family = binomial(link = "logit"))
anova(CSmodel_null, CSmodel, test = "LRT")
### Fit an additive model with response ("choice") and predictors ("countries", "sanctions")
CSmodel <- glm(choice ~ countries + sanctions,
data = climateSupport,
family = binomial(link = "logit"))
# Inspect new logistical model details
summary(CSmodel) # Review summary statistics
attributes(CSmodel) # Review attribute names
### Conduct global null hypothesis
# First, using Chi Squared test
global_null_chisq <- anova(CSmodel, test = "Chisq")
# Second, comparing with a nested null model
CSmodel_null <- glm(choice ~ 1,
data = climateSupport,
family = binomial(link = "logit"))
globa_null_LRT <- anova(CSmodel_null, CSmodel, test = "LRT")
global_null_chisq
globa_null_LRT
# Create interaction model
CSmodel_interaction <- glm(choice ~ countries + sanctions + countries*sanctions,
data = climateSupport,
family = binomical(link = "logit"))
# Create interaction model
CSmodel_interaction <- glm(choice ~ countries + sanctions + countries*sanctions,
data = climateSupport,
family = binomial(link = "logit"))
global_null_interaction <- anova(CSmodel_interaction, CSmodel, test = "LRT")
global_null_interaction
lapply(climateSupport, class) # Confirm classes as factors and ordered factors
lapply(climateSupport, unique) # Check levels for each variable
levels(climateSupport$countries)
levels(climateSupport$sanctions)
lapply(climateSupport, unique) # Check levels for each variable
CSmodel$null.deviance - CSmodel$deviance
# Inspect new logistical model details
summary(CSmodel) # Review summary statistics
library(stargazer)
# Inspect new logistical model details
CSmodel_summary <- summary(CSmodel) # Review summary statistics
stargazer(CSmodel_summary)
?stargazer
stargazer(CSmodel_summary, type = "latex")
CSmodel_summary
stargazer(CSmodel_summary,
type = "latex",
title = "Logistic Regression Model",
align = TRUE)
coefficients(CSmodel)
print(coefficients(CSmodel))
stargazer(CSmodel,
type = "latex",
title = "Logistic Regression Model",
align = TRUE)
global_null_chisq
global_null_chisq
anova1 <- stargazer(global_null_chisq,
type = "latex",
title = "Analysis of Deviance: CSmodel and Chi-Squared Test",
align = TRUE)
attributes(global_null_chisq)
anova2 <- stargazer(global_null_LRT,
type = "latex",
title = "Analysis of Deviance: CSmodel and Chi-Squared Test",
align = TRUE)
# Second, comparing with the nested null model
CSmodel_null <- glm(choice ~ 1,
data = climateSupport,
family = binomial(link = "logit"))
global_null_LRT <- anova(CSmodel_null, CSmodel, test = "LRT")
print(global_null_LRT)
anova2 <- stargazer(global_null_LRT,
type = "latex",
title = "Analysis of Deviance: CSmodel and Chi-Squared Test",
align = TRUE)
anova2 <- stargazer(global_null_LRT,
type = "latex",
title = "Analysis of Deviance: CSmodel and LRT Test",
align = TRUE)
CSmodel_summary
CSmodel
levels(climateSupport$sanctions) # Check level ordering
levels(climateSupport$countries) # Check level ordering
CSmodel_summary
anova1
CSmodel_table
# Inspect new logistical model details
CSmodel_summary <- summary(CSmodel) # Review summary statistics
CSmodel_table <- stargazer(CSmodel,
type = "latex",
title = "Logistic Regression Model",
align = TRUE)
### Fit an additive model with response ("choice") and predictors ("countries", "sanctions")
CSmodel <- glm(choice ~ countries + sanctions,
data = climateSupport,
family = binomial)
# Inspect new logistical model details
CSmodel_summary <- summary(CSmodel) # Review summary statistics
CSmodel_summary
CSmodel$coefficients[2]
CSmodel$coefficients[5]
### Computing log-odds
log_odds_change <- CSmodel$coefficients[5] - CSmodel$coefficients[4]
log_odds_change
### Computing log-odds
log_odds_change <- vector(CSmodel$coefficients[5] - CSmodel$coefficients[4])
### Computing log-odds
log_odds_change <- CSmodel$coefficients[5] - CSmodel$coefficients[4]
log_odds_change
### Computing log-odds
log_odds_change <- as.vector(CSmodel$coefficients[5] - CSmodel$coefficients[4])
log_odds_change
log_odds_change
odds_ratio_change <- exp(log_odds_change)
print(odds_ratio_change)
CSmodel$coefficients[5]
log_odds_change2 <- as.vector(CSmodel$coefficients[1] + CSmodel$coefficients[3])
odds_ratio_change2 <- exp(log_odds_change2)
print(odds_ratio_change2)
CSmodel$coefficients[1]
CSmodel$coefficients[3]
### Estimate probability for 80 countries and no sanctions
log_odds_2b <- as.vector(CSmodel$coefficients[1] + CSmodel$coefficients[3])
log_odds_2b
### Estimate probability for 80 countries and no sanctions
log_odds_2b <- as.vector(CSmodel$coefficients[1] + CSmodel$coefficients[3])
probability_support_2b <- 1 / (1 + exp(-log_odds_2b))
print(probability_support_2b)
# Create interaction model
CSmodel_interaction <- glm(choice ~ countries + sanctions + countries*sanctions,
data = climateSupport,
family = binomial(link = "logit"))
# Compare with CSmodel as a nested function
global_null_interaction <- anova(CSmodel, CSmodel_interaction, test = "LRT")
global_null_interaction
anova3 <- stargazer(global_null_interaction,
type = "latex",
title = "Analysis of Deviance: CSmodel and Interaction with LRT Test",
align = TRUE)
# Prepare new df and plot
CSpredict %>%
arrange(CSmodel_hat) %>%
mutate(rank = row_number()) %>%
ggplot(aes(rank, CSmodel_hat)) +
geom_point(aes(colour = choice), alpha = 0.05) +
scale_y_continuous(limits = c(0,1))
plot_geo(climateSupport$choice,
CSmodel$fitted.values)
### Plot for exploratory purposes
climateSupport %>%
group_by(sanctions) %>%
ggplot(aes(choice, countries)) +
geom_col(aes(choice, countries))
climateSupport %>%
xtabs(~ countries + sanctions, data = .) %>%
ggplot(aes(countries, sanctions)) +
geom_point()
climateSupport %>%
xtabs(~ countries + sanctions, data = .) %>%
ggplot(aes(countries, sanctions)) +
geom_point()
climateSupport %>%
xtabs(~ countries + sanctions, data = .) %>%
ggplot(aes(countries, sanctions)) +
geom_point()
climateSupport %>%
xtabs(~ countries + sanctions, data = .) %>%
ggplot(aes(countries, sanctions)) +
geom_point()
climateSupport
ggplot(climateSupport, aes(sanctions,
fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot Showing Support Choice across Sanction Severity",
y = "Count of Choice Support") +
theme_minimal()
ggplot(climateSupport, aes(sanctions)) +
geom_point(y = mean(choice)) +
labs(title = "Stacked Bar Plot Showing Support Choice across Sanction Severity",
y = "Count of Choice Support") +
theme_minimal()
ggplot(climateSupport, aes(sanctions,
fill = factor(choice))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot Showing Support Choice across Sanction Severity",
y = "Count of Choice Support") +
theme_minimal()
climateSupport %>%
xtabs(~ countries + sanctions, data = .) %>%
ggplot(aes(countries, sanctions)) +
geom_point()
# remove objects
rm(list=ls())
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("dplyr", "ggplot2", "stargazer"),  pkgTest)
library(stargazer)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#####################
# Problem 1
#####################
# load data
load(url("https://github.com/ASDS-TCD/StatsII_Spring2024/blob/main/datasets/climateSupport.RData?raw=true"))
### Inspect dataset
head(climateSupport) # Check overall values of dataset
str(climateSupport) # Check shape, and names and classes of variables
summary(climateSupport) # Check summary stats ie frequencies of values
lapply(climateSupport, class) # Confirm explanatory variables are ordered factors
lapply(climateSupport, unique) # Check levels for each variable
levels(climateSupport$countries) # Check level ordering
levels(climateSupport$sanctions) # Check level ordering
names(climateSupport) # Check just variable names
anyNA.data.frame(climateSupport) # FALSE confirms no NA values to account for
### Fit an additive model with response ("choice") and predictors ("countries", "sanctions")
CSmodel <- glm(choice ~ countries + sanctions,
data = climateSupport,
family = binomial(link = "logit"))
# Inspect new logistical model details
CSmodel_summary <- summary(CSmodel) # Review summary statistics
CSmodel_table <- stargazer(CSmodel,
type = "latex",
title = "Logistic Regression Model",
align = TRUE)
### Conduct global null hypothesis test
# First, using Chi-Squared test
global_null_chisq <- anova(CSmodel, test = "Chisq")
print(global_null_chisq)
anova1 <- stargazer(global_null_chisq,
type = "latex",
title = "Analysis of Deviance: CSmodel and Chi-Squared Test",
align = TRUE)
# Second, comparing with the nested null model
CSmodel_null <- glm(choice ~ 1,
data = climateSupport,
family = binomial(link = "logit"))
global_null_LRT <- anova(CSmodel_null, CSmodel, test = "LRT")
print(global_null_LRT)
anova2 <- stargazer(global_null_LRT,
type = "latex",
title = "Analysis of Deviance: CSmodel and LRT Test",
align = TRUE)
### Computing log-odds
log_odds_change <- as.vector(CSmodel$coefficients[5] - CSmodel$coefficients[4])
odds_ratio_change <- exp(log_odds_change)
print(odds_ratio_change)
### Estimate probability for 80 countries and no sanctions
log_odds_2b <- as.vector(CSmodel$coefficients[1] + CSmodel$coefficients[3])
probability_support_2b <- 1 / (1 + exp(-log_odds_2b))
print(probability_support_2b)
### Conduct hypothesis test on interaction model
# Create interaction model
CSmodel_interaction <- glm(choice ~ countries + sanctions + countries*sanctions,
data = climateSupport,
family = binomial(link = "logit"))
# Compare with CSmodel as a nested function
global_null_interaction <- anova(CSmodel, CSmodel_interaction, test = "LRT")
anova3 <- stargazer(global_null_interaction,
type = "latex",
title = "Analysis of Deviance: CSmodel and Interaction with LRT Test",
align = TRUE)
